/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import dao.TablesDAO;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import java.util.List;

import javax.swing.JLabel;
import javax.swing.JCheckBox;
import javax.swing.JRadioButton;
import javax.swing.ListSelectionModel;
import modelo.User;
/**
 *
 * @author erick
 */
public class TelaRestrita extends javax.swing.JFrame {

    private TablesDAO dao;
    private User user;
    private Vector listaRadio = new Vector();
    private Vector listaCheck = new Vector();
    private JCheckBox check;
    
    public TelaRestrita(User user) throws SQLException {
        initComponents();
        this.user = user;
        jListCheck.setVisible(false);
        carregarComboBox();
        
    }
    
    public static void main(String[] args) throws SQLException {
        User user2 = new User();
        user2.setHost("localhost");
        user2.setPorta("3306");
        TelaRestrita tela = new TelaRestrita(user2);
        tela.setVisible(true);
    }
       
    private static class RadioRenderer implements ListCellRenderer{

        @Override
        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            JRadioButton radio = (JRadioButton) value; 
            return radio;
        }      
    }
    
    private static class CheckRenderer implements ListCellRenderer{

        @Override
        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            JCheckBox check = (JCheckBox) value; 
            return check;
        }      
    }
    
    private void carregarCheckBox(List<String> banco) throws SQLException{
        
        jListCheck.setCellRenderer(new CheckRenderer());
                        
        for (String col : banco) {
            check = new JCheckBox(col.toString());
            listaCheck.add(check);
        }
        jListCheck.setListData(listaCheck);
        jListCheck.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jListCheck.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e){
                int index = jListCheck.locationToIndex(e.getPoint());
                if (index != -1){
                    JCheckBox check = (JCheckBox) jListCheck.getModel().getElementAt(index);
                    //JOptionPane.showMessageDialog(null, radioButton.isSelected());se
                    
                    boolean teste = false;
                    if (teste = false)
                        check.setSelected(false);
                    else
                        check.setSelected(true);                
                }
                repaint();
            }
        
        });
    }
    
    private void carregarComboBox() throws SQLException{
        jListRadio.setCellRenderer(new RadioRenderer());
        
        dao = new TablesDAO(user);
                
        for (String col : dao.selecionar()) {
            JRadioButton radio = new JRadioButton(col.toString());
            grupo.add(radio);
            listaRadio.add(radio);
        }
        jListRadio.setListData(listaRadio);
        jListRadio.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jListRadio.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e){
                int index = jListRadio.locationToIndex(e.getPoint());
                if (index != -1){
                    JRadioButton radioButton = (JRadioButton) jListRadio.getModel().getElementAt(index);
                    
                    if (radioButton.isSelected() == false)
                        radioButton.setSelected(true);
                    else
                        radioButton.setSelected(false);                
                }
                repaint();
            }
        
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo = new javax.swing.ButtonGroup();
        scrollRadio = new javax.swing.JScrollPane();
        jListRadio = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        scrollCheck = new javax.swing.JScrollPane();
        jListCheck = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tela Restrita");

        jListRadio.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        scrollRadio.setViewportView(jListRadio);

        jButton2.setText("Adicionar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jListCheck.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        scrollCheck.setViewportView(jListCheck);

        jButton1.setText("Confirmar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(scrollRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(scrollCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scrollCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(0, 23, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JRadioButton radio = null;
            
        listaCheck.clear();
        //repaint();
        for(int i=0; i < jListRadio.getModel().getSize();i++){
            if(((JRadioButton)jListRadio.getModel().getElementAt(i)).isSelected()){
                radio = (JRadioButton) jListRadio.getModel().getElementAt(i);
                break;
            }    
         }
        user.setPrivilegio(radio.getText());
        dao = new TablesDAO(user);
        jListCheck.setVisible(true);
        
        try {
            
            List<String> teste = null;
            
            teste = dao.selecionarBancoETabelas();
            carregarCheckBox(teste);
            
            
        } catch (SQLException ex) {
            Logger.getLogger(TelaRestrita.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JList jListCheck;
    private javax.swing.JList jListRadio;
    private javax.swing.JScrollPane scrollCheck;
    private javax.swing.JScrollPane scrollRadio;
    // End of variables declaration//GEN-END:variables
}
